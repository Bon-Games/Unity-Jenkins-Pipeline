<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<!-- Describes how Xcode should export the archive. Available options: app-store, validation,
		ad-hoc, package, enterprise, development, developer-id, and mac-application. The list of options
		varies based on the type of archive. Defaults to development.-->
		<!--Describes
		how Xcode should export the archive. Available options: app-store-connect, release-testing,
		enterprise, debugging, developer-id, mac-application, and validation. The list of options varies
		based on the type of archive. Defaults to debugging. Additional options include app-store
		(deprecated: use app-store-connect), ad-hoc (deprecated: use release-testing), and development
		(deprecated: use debugging).-->
		<key>method</key>
		<string>app-store-connect</string>
		<!-- The Developer Portal team to use for this export. Defaults to the team used to build the
		archive.-->
		<key>teamID</key>
		<string>XXXXXXXXXX</string>
		<key>uploadBitcode</key>
		<true />
		<!-- For non-App Store exports, should Xcode re-compile the app from bitcode? Defaults to
		YES.-->
		<key>compileBitcode</key>
		<true />
		<!-- For App Store exports, should the package include symbols? Defaults to YES.-->
		<key>uploadSymbols</key>
		<true />
		<!-- Should symbols be stripped from Swift libraries in your IPA? Defaults to YES.-->
		<key>stripSwiftSymbols</key>
		<!-- For non-App Store exports, should Xcode thin the package for one or more device variants?
		Available options: <none> (Xcode produces a non-thinned universal app), <thin-for-all-variants>
		(Xcode produces a universal app and all available thinned variants), or a model identifier for a
		specific device (e.g. "iPhone7,1"). Defaults to <none>.-->
		<true />
		<!-- Determines whether the app is exported locally or uploaded to Apple. Options are export or
		upload. The available options vary based on the selected distribution method. Defaults to
		export. -->
		<key>destination</key>
		<string>upload</string>
		<!-- The signing style to use when re-signing the app for distribution. Options are manual or
		automatic. Apps that were automatically signed when archived can be signed manually or
		automatically during distribution, and default to automatic. Apps that were manually signed when
		archived must be manually signed during distribtion, so the value of signingStyle is ignored.-->
		<key>signingStyle</key>
		<string>manual</string>
		<!-- For manual signing only. Provide a certificate name, SHA-1 hash, or automatic selector to
		use for signing. Automatic selectors allow Xcode to pick the newest installed certificate of a
		particular type. The available automatic selectors are "Mac App Distribution", "iOS
		Distribution", "iOS Developer", "Developer ID Application", "Apple Distribution", "Mac
		Developer", and "Apple Development". Defaults to an automatic certificate selector matching the
		current distribution method.-->
		<key>signingCertificate</key>
		<string>iOS Distribution: POSSIBLE Mobile</string>
		<!-- For manual signing only. Specify the provisioning profile to use for each executable in
		your app. Keys in this dictionary are the bundle identifiers of executables; values are the
		provisioning profile name or UUID to use.-->
		<key>provisioningProfiles</key>
		<dict>
			<key>com.client.appname</key>
			<string>Client App Release</string>
			<key>com.client.appname.watchkitapp</key>
			<string>Client App WatchApp Release</string>
			<key>com.client.appname.watchkitapp.watchkitextension</key>
			<string>Client App WatchKitExtension Release</string>
			<key>com.client.appname.RemoteNotificationServiceExtension</key>
			<string>Client App PushExtension Release</string>
			<key>com.client.appname.Stickers</key>
			<string>Client App Stickers Release</string>
		</dict>
	</dict>
</plist>